openapi: 3.0.0
info:
  title: Go Clean Architecture API
  description: Example API for Go Clean Architecture project
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Development server

paths:
  /examples:
    get:
      summary: Get all examples
      tags:
        - Examples
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by name
        - in: query
          name: status
          schema:
            type: string
            enum: [active, inactive]
          description: Filter by status
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Page size
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
    post:
      summary: Create a new example
      tags:
        - Examples
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /examples/{id}:
    get:
      summary: Get example by ID
      tags:
        - Examples
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '404':
          description: Not found
    put:
      summary: Update example
      tags:
        - Examples
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      summary: Delete example
      tags:
        - Examples
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

components:
  schemas:
    ExampleRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        status:
          type: string
          enum: [active, inactive]

    ExampleResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Response:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        message:
          type: string
        data:
          type: object

    PaginationResponse:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExampleResponse'
        meta:
          $ref: '#/components/schemas/MetaData'

    MetaData:
      type: object
      properties:
        page:
          type: integer
        page_size:
          type: integer
        total:
          type: integer
        total_page:
          type: integer
